/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TD2_PF;

import java.util.List;
import java.util.Map;
import java.util.function.Predicate;

public class App {
    //Exercice 1

    //Question 1
    public static void question1(){
        Somme<Integer> integerSomme = (x,y) -> x+y;
        Somme<Long> longSomme = (x,y) -> x+y;
        Somme<Double> doubleSomme = (x,y) -> x+y;
        Somme<String> stringSomme = (x,y) -> x+y;

        System.out.println(integerSomme.somme(1,2));
        System.out.println(longSomme.somme(1L,2L));
        System.out.println(doubleSomme.somme(1.5,2.10));
        System.out.println(stringSomme.somme("to","to"));

    }

    public static void question2() {
        List<String> list2string = List.of("a", "b", "c", "d");
        ToString<List<String>> l2s = list -> {
            StringBuffer chaine = new StringBuffer();
            boolean isPremier = true;
            for (String e : list) {
                if (!isPremier)
                    chaine.append(",");
                else
                    isPremier = false;
                chaine.append(e);
            }
            return chaine.toString();
        };

        System.out.println(l2s.conversion(list2string));
    }

    //Exercice 2

    public static void question2_1(){
        Predicate<Integer> tropPetit = x -> x<100;
        Predicate<Integer> tropGrand = x -> x>200;
        Predicate<Integer> mauvaiseTaille = tropPetit.or(tropGrand);
        Predicate<Integer> tailleCorrecte = mauvaiseTaille.negate();
        Predicate<Double> tropLourd = x -> x>150.0;
        Predicate<Double> poidsCorrect = tropLourd.negate();
        Predicate<Paire<Integer,Double>> autorise = x -> tailleCorrecte.test(x.fst) && poidsCorrect.test(x.snd);

    }


}
